# Do not ignore the .gitignore or any of the other files we've bundled in this
# repository by default. They are intended to remain in your repository.

# We've gone ahead and set up a .gitignore for you. However, as we discussed in
# the git lab, this won't ignore binaries that don't have the .o extension. You
# can add rules to ignore those in this file or you can create an additional
# .gitignore and add the new rule in the relevant subdirectory to what you're
# working on.
#
# You can have a .gitignore in any directory of your repository. If there are
# multiple, they will all work. Note that paths specified in a .gitignore will
# always be relative to where the .gitignore is located, so if you want to
# ignore hw1/executable by putting a .gitignore in hw1/, you would add rule:
#
# executable
#
# If you wanted to ignore hw1/executable from this file, you'd write the
# following at the bottom of this file:
#
# hw1/executable
#
# For more: https://git-scm.com/docs/gitignore

# Windows
# https://github.com/github/gitignore/blob/master/Global/Windows.gitignore
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# macOS
# https://github.com/github/gitignore/blob/master/Global/macOS.gitignore
.DS_Store
.AppleDouble
.LSOverride

# JetBrains
# https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf
.idea/**/contentModel.xml
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# VSCode
# https://github.com/github/gitignore/blob/master/Global/VisualStudioCode.gitignore
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
.history/

# Sublime
# https://github.com/github/gitignore/blob/master/Global/SublimeText.gitignore
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace

# C++
*.o
hw4_checkpoint/
hw4_tests/
equal-paths-test
bst-test

.clang-format
.clang-tidy
bst-test.cpp.229r.expand
bst-test.cpp.230r.vregs
bst-test.cpp.231r.into_cfglayout
bst-test.cpp.232r.jump
bst-test.cpp.244r.reginfo
bst-test.cpp.264r.outof_cfglayout
bst-test.cpp.265r.split1
bst-test.cpp.267r.dfinit
bst-test.cpp.268r.mode_sw
bst-test.cpp.269r.asmcons
bst-test.cpp.273r.ira
bst-test.cpp.274r.reload
bst-test.cpp.278r.split2
bst-test.cpp.282r.pro_and_epilogue
bst-test.cpp.285r.jump2
bst-test.cpp.298r.stack
bst-test.cpp.299r.alignments
bst-test.cpp.301r.mach
bst-test.cpp.302r.barriers
bst-test.cpp.305r.eh_ranges
bst-test.cpp.306r.shorten
bst-test.cpp.307r.nothrow
bst-test.cpp.308r.dwarf2
bst-test.cpp.309r.final
bst-test.cpp.310r.dfinish
example